import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * Our fifth example class. This shows how to listen to 2 buttons.
 * 
 * @author Matthew Hertz
 */
public class MultipleEventButtons implements ActionListener {
	/** Variable which will count the number of times button is clicked. */
	private int buttonClicks;

	/** Variable counting the number of times other button is clicked. */
	private int otherClicks;

	/**
	 * The first button we create on our window. We need this field as we use
	 * the reference in multiple methods.
	 */
	private JButton button;

	/**
	 * The second button we create for our window. Due to our possibly poor
	 * design, this must also be a field.
	 */
	private JButton otherButton;

	/**
	 * Create a new window containing the button.
	 */
	public MultipleEventButtons() {
		JFrame frame = new JFrame(); // Create the window
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // Quit when frame closed.
		button = new JButton("Click me!"); // I like buttons.
		button.addActionListener(this); // Spy on the first button
		otherButton = new JButton("Or me!");
		otherButton.addActionListener(this); // Spy on the second button also
		frame.add(BorderLayout.NORTH, button);
		frame.add(BorderLayout.SOUTH, otherButton);
		frame.pack(); // Size the window automatically
		frame.setVisible(true);
	}

	/**
	 * Create the window with 2 buttons. (Jokes withheld to prevent me from
	 * being fired).
	 * 
	 * @param args
	 *            Command-line arguments which we will ignore.
	 */
	public static void main(String[] args) {
		Example5 example = new Example5();
	}

	/**
	 * This method is required by ActionListener. It is called to respond to any
	 * action event generated by a component to which we are listening.
	 * 
	 * @param ae
	 *            Action event that has just been triggered.
	 */
	public void actionPerformed(ActionEvent ae) {
		if ((buttonClicks + otherClicks) == 0) {
			//JOptionPane.showMessageDialog(null, "We can handle two events!");
			System.out.println("Can I determine which one you clicked?");
		}
		// If this event was triggered by the button
		if (ae.getSource() == button) {
			// Increase the number of times this button has been clicked.
			buttonClicks += 1;
			// Update the text to reflect this fact.
			otherButton.setText("You've been clicked " + buttonClicks + " times");
		} else if (ae.getSource() == otherButton) {
			// Increase this count.
			otherClicks += 1;
			// Update the appropriate text.
			button.setText("But you've been clicked " + otherClicks
					+ " times");
		}
	}
}
